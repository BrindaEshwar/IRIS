<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  interaction-example-hateoas-simple
  %%
  Copyright (C) 2012 - 2013 Temenos Holdings N.V.
  %%
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
  
  You should have received a copy of the GNU Affero General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  #L%
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util-3.0.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<context:component-scan base-package="com.temenos.interaction.core.hypermedia"/>
		
	<!-- Read property files -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:responder.properties</value>
			</list>
		</property>
		<property name="ignoreUnresolvablePlaceholders" value="true"/>
	</bean>

	<!-- Metadata -->	
	<bean id="metadataManager" class="com.temenos.interaction.core.resource.ResourceMetadataManager">
		<constructor-arg name="hypermediaEngine"><null /></constructor-arg>
	</bean>
	<bean id="metadata" factory-bean="metadataManager" factory-method="getMetadata"/>

	<!-- Import Resource manager context -->
	<import resource="classpath:/META-INF/resourcemanager-context.xml" />
	
    <!-- Persistence manager -->
    <bean id="persistence" class="com.temenos.interaction.example.hateoas.simple.Persistence" >
        <constructor-arg ref="entityManagerFactory" />
    </bean>
	
	<bean id="httpCache" class="com.temenos.interaction.core.cache.HashMapCache" />
	
    <!--
	  An extension of org.apache.wink.spring.Registrar with support for singletons.
    -->
	<bean class="com.temenos.interaction.winkext.RegistrarWithSingletons">
		<property name="singletons">
        	<set>
				<ref local="halProvider" />
 			</set>
   		</property>
		<property name="serviceRootFactory" ref="serviceRootFactory" />
	</bean>

	<bean id="halProvider" class="com.temenos.interaction.media.hal.HALProvider">
    	<constructor-arg ref="metadata" />
        <constructor-arg ref="resourceStateProvider" />
	</bean>


	<!-- 
		Import the main SpringDSL entry point for IRIS
		
		Initialises the ResourceStateProvider and understands how to construct
		ResourceState instances using Spring
	-->
	<import resource="classpath:IRIS-SpringDSL-main.xml" />

	<bean id="serviceRootFactory" class="com.temenos.interaction.winkext.LazyServiceRootFactory">
		<property name="commandController" ref="commands" />
		<property name="metadata" ref="metadata" />
		<property name="transformer"><bean class="com.temenos.interaction.core.hypermedia.BeanTransformer" /></property>
		<property name="resourceStateProvider" ref="resourceStateProvider" />
		<property name="cacheImpl" ref="httpCache" />
	</bean>

    <!-- Commands -->
    <bean id="GETServiceRoot" class="com.temenos.interaction.example.hateoas.simple.GETServiceRootCommand" />
	<bean id="NoopGET" class="com.temenos.interaction.core.command.NoopGETCommand" />
	<bean id="NoopPUT" class="com.temenos.interaction.core.command.NoopPUTCommand" />
	<bean id="GETPreferences" class="com.temenos.interaction.example.hateoas.simple.GETPreferencesCommand" />
	<bean id="GETNotes" class="com.temenos.interaction.example.hateoas.simple.GETNotesCommand">
		<constructor-arg ref="persistence" />
	</bean>
	<bean id="GETNote" class="com.temenos.interaction.example.hateoas.simple.GETNoteCommand">
		<constructor-arg ref="persistence" />
	</bean>
	<bean id="DELETENote" class="com.temenos.interaction.example.hateoas.simple.DELETENoteCommand">
		<constructor-arg ref="persistence" />
	</bean>
	<bean id="CREATENote" class="com.temenos.interaction.example.hateoas.simple.CREATENoteCommand">
		<constructor-arg ref="persistence" />
	</bean>

	<!-- Resource commands -->
	<bean id="commands" class="com.temenos.interaction.core.command.NewCommandController">
		<constructor-arg name="commands">
			<util:map id="commandsMap" map-class="java.util.Hashtable">
				<entry key="GETServiceRoot" value-ref="GETServiceRoot" />
				<entry key="NoopGET" value-ref="NoopGET" />
				<entry key="NoopPUT" value-ref="NoopPUT" />
				<entry key="GETPreferences" value-ref="GETPreferences" />
				<entry key="GETNotes" value-ref="GETNotes" />
				<entry key="GETNote" value-ref="GETNote" />
				<entry key="DELETENote" value-ref="DELETENote" />
				<entry key="CREATENote" value-ref="CREATENote" />
			</util:map> 
		</constructor-arg>
	</bean>
	
</beans>